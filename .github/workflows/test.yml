on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

name: CI

jobs:
  cache-deps:
    name: Cache dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: Install locked dependencies
        run: npm ci
      
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-i

  type-check:
    name: Type check
    runs-on: ubuntu-latest
    needs: cache-deps
    steps:
      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-i
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      
      - name: Type check
        run: npm run type-check
        env:
          CI: true

  test:
    name: End-to-end test
    runs-on: ubuntu-latest
    needs: cache-deps
    steps:
      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-i
      
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      
      - name: Install operating system dependencies
        run: npx playwright install-deps
      
      - name: Install Playwright browsers
        run: npx playwright install
      
      - name: Run end-to-end tests
        run: npm run test:e2e:run
        env:
          CI: true
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          MAGIC_LINK_SECRET: ${{ secrets.MAGIC_LINK_SECRET }}
          MAILGUN_SENDING_KEY: nothing # Unnecessary for testing
          MAILGUN_DOMAIN: nothing # Unnecessary for testing
